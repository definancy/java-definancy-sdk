/*
 * Definancy Node API
 * Specification version: 0.0.1.wip.20250826
 *
 * NOTE: This class is auto generated by our custom generator.
 * Do not edit the class manually.
 */


package com.definancy.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Current confirmation status of a blockchain transaction indicating its processing state from initial detection through final confirmation.
 */
@JsonAdapter(BlockchainTransactionStatus.Adapter.class)
public enum BlockchainTransactionStatus {
  
  COMPLIANCE("compliance"),
  
  WAITING("waiting"),
  
  CONFIRMING("confirming"),
  
  CONFIRMED("confirmed");

  private String value;

  BlockchainTransactionStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BlockchainTransactionStatus fromValue(String value) {
    for (BlockchainTransactionStatus b : BlockchainTransactionStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BlockchainTransactionStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final BlockchainTransactionStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BlockchainTransactionStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BlockchainTransactionStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    BlockchainTransactionStatus.fromValue(value);
  }
}

