/*
 * Definancy Node API
 * Specification version: 0.0.1.wip.20250826
 *
 * NOTE: This class is auto generated by our custom generator.
 * Do not edit the class manually.
 */


package com.definancy.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Identification document type.
 */
@JsonAdapter(PersonNaturalIdType.Adapter.class)
public enum PersonNaturalIdType {
  
  NATIONAL_IDENTITY_CARD("NationalIdentityCard"),
  
  PASSPORT("Passport");

  private String value;

  PersonNaturalIdType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PersonNaturalIdType fromValue(String value) {
    for (PersonNaturalIdType b : PersonNaturalIdType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PersonNaturalIdType> {
    @Override
    public void write(final JsonWriter jsonWriter, final PersonNaturalIdType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PersonNaturalIdType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PersonNaturalIdType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    PersonNaturalIdType.fromValue(value);
  }
}

